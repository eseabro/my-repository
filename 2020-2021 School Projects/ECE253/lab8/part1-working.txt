.global _start
.global SWAP


_start:
	ldr r0, =LIST //load the list
	ldr r10, [r0] // the length of the list
	ldr SP, =0x10000 //stack
	add r0,r0,#4 //item number one
	mov r11, r10 //for each loop
	mov r12, r10 //number of swaps per loop
	push {r0} 

	
LOOP: 
	sub r11, r11, #1
	cmp r11, #0 
	beq CHECK //if there are no more swaps
	bl SWAP
	add r0, r1, #4
	b LOOP
	
SWAP: 
	mov r1, r0
	ldr r2, [r1] //r2 holds word 
	ldr r3, [r1, #4] //r3 holds word+1
	cmp r3, r2 
	blt switcharoo // if r3<r2
	mov r0, #0 // correct swap
	b end
	
switcharoo:
	str r2, [r1, #4] //put the second word in the second part of the list (swap)
	str r3, [r1] //put the first word in the first part of the list (swap)
	mov r0, #1 //a swap has happened
	b end
end:
	mov PC, LR

CHECK:
	pop {r0}
	sub r12, r12, #1 
	cmp r12, #0
	beq done
	mov r11, r10
	push {r0}
	b LOOP

done:
	b done




.text
LIST:	.word 10, 1400, 45, 23, 5, 3, 8, 17, 4, 20, 33